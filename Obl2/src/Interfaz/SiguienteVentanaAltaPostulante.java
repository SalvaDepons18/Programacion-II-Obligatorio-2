//Salvador Depons(303738) y Valentina Velazquez(305278)

package Interfaz;
import Dominio.*;
import java.util.*;
import javax.swing.*;

// Clase de la ventana Siguiente Ventana Alta Postulante
public class SiguienteVentanaAltaPostulante extends javax.swing.JFrame implements Observer{
    private Sistema modelo; //
    private Postulante postulante;
   
    // Constructor vacio
    public SiguienteVentanaAltaPostulante() {
        initComponents();
    
    }
    
    // Constructor 
    public SiguienteVentanaAltaPostulante(Sistema unSistema, Postulante elPostulante){
        modelo = unSistema;
        postulante = elPostulante;
        initComponents();
        cargarLista();
        cargarTematicas();
        setTitle("Postulante (" + elPostulante.getNombre() + ")");
        modelo.addObserver(this);
    }
    
    // Metodo que actualiza la lista de tematicas
    @Override
    public void update(Observable o, Object arg){
        cargarTematicas();
    }
    
    // Metodo que carga el combo con las tematicas existentes
    public void cargarTematicas(){
        ArrayList <Tematica> temas = modelo.getListaTematicas();
        ComboTemasAlta.removeAllItems();
        for (Tematica tem: temas){
            ComboTemasAlta.addItem(tem);
        }
    }
    
    // Metodo que carga la lista de experiencias de el postulante
    public void cargarLista(){
        Postulante postulante = this.postulante;
        ArrayList<String> experiencias = postulante.darExperiencias();
        String[] experienciasArray = new String[experiencias.size()];
        for (int i = 0; i < experiencias.size(); i++) {
             String experiencia = experiencias.get(i);
             Tematica nombreTema = modelo.temaPorNombre(experiencia);
             String nivelExperiencia = postulante.darNivelExperienciaEnTematica(nombreTema);
             experienciasArray[i] = experiencia + "(" + nivelExperiencia + ")";
        }
        
        ListExperienciaAlta.setListData(experienciasArray);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTemaAltaPostulante = new javax.swing.JLabel();
        ComboTemasAlta = new javax.swing.JComboBox<>();
        lblNivelAltaPostulante = new javax.swing.JLabel();
        SpinnerNivelAlta = new javax.swing.JSpinner();
        btnAgregarAltaPostulante = new javax.swing.JButton();
        lblExperienciaAltaPostulante = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListExperienciaAlta = new javax.swing.JList<>();
        btnRegistrarAltaPostulante = new javax.swing.JButton();
        btnCancelarSiguienteAltaPostulante = new javax.swing.JButton();
        btnEliminarAltaPostulante = new javax.swing.JButton();
        Separator1AltaUsuario = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Siguiente Alta Postulante");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(null);

        lblTemaAltaPostulante.setText("Tema");
        jPanel1.add(lblTemaAltaPostulante);
        lblTemaAltaPostulante.setBounds(30, 20, 60, 16);

        ComboTemasAlta.setName(""); // NOI18N
        ComboTemasAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTemasAltaActionPerformed(evt);
            }
        });
        jPanel1.add(ComboTemasAlta);
        ComboTemasAlta.setBounds(130, 20, 250, 22);

        lblNivelAltaPostulante.setText("Nivel:");
        jPanel1.add(lblNivelAltaPostulante);
        lblNivelAltaPostulante.setBounds(30, 60, 60, 16);

        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel(1, 1, 10, 1);
        SpinnerNivelAlta.setModel(modeloSpinner);
        jPanel1.add(SpinnerNivelAlta);
        SpinnerNivelAlta.setBounds(130, 60, 64, 22);

        btnAgregarAltaPostulante.setText("Agregar");
        btnAgregarAltaPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAltaPostulanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarAltaPostulante);
        btnAgregarAltaPostulante.setBounds(210, 60, 90, 30);

        lblExperienciaAltaPostulante.setText("Experiencia:");
        jPanel1.add(lblExperienciaAltaPostulante);
        lblExperienciaAltaPostulante.setBounds(30, 120, 80, 16);

        jScrollPane1.setViewportView(ListExperienciaAlta);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(140, 110, 230, 120);

        btnRegistrarAltaPostulante.setText("Registrar");
        btnRegistrarAltaPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarAltaPostulanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrarAltaPostulante);
        btnRegistrarAltaPostulante.setBounds(275, 243, 90, 30);

        btnCancelarSiguienteAltaPostulante.setText("Cancelar");
        btnCancelarSiguienteAltaPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarSiguienteAltaPostulanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelarSiguienteAltaPostulante);
        btnCancelarSiguienteAltaPostulante.setBounds(20, 243, 100, 30);

        btnEliminarAltaPostulante.setText("Eliminar");
        btnEliminarAltaPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAltaPostulanteActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarAltaPostulante);
        btnEliminarAltaPostulante.setBounds(20, 170, 90, 30);
        jPanel1.add(Separator1AltaUsuario);
        Separator1AltaUsuario.setBounds(20, 100, 360, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 416, 351);
    }// </editor-fold>//GEN-END:initComponents

    private void ComboTemasAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTemasAltaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboTemasAltaActionPerformed

    // Funcionamiento del boton eliminar tematica
    private void btnEliminarAltaPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAltaPostulanteActionPerformed
        try {
            // Veo la tematica seleccionada de las experiencias
            Postulante p = this.postulante;
            int selectedIndex = ListExperienciaAlta.getSelectedIndex();
        
        // Valido que este seleccionado algun elemento de la  
        if (selectedIndex >= 0) {
            // Tomo la tematica y la elimino de la lista de experiencia del postulante
            ArrayList<String> experiencias = p.darExperiencias();
            String experiencia = experiencias.get(selectedIndex);
            Tematica tema = modelo.temaPorNombre(experiencia);
            p.eliminarExperienciaEnTematica(tema);
            cargarLista(); 
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún elemento para eliminar.");
        }
        // Capturo Exeption
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEliminarAltaPostulanteActionPerformed

    // Funcionamiento del boton registrar
    private void btnRegistrarAltaPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarAltaPostulanteActionPerformed
        // Tomo el postulante, lo agrego a la lista, cierro la ventana y abro una nueva de ingresar postulante
        Postulante p = this.postulante;
        modelo.agregarPostulante(p);
        modelo.agregarPersona((Persona)p);
        dispose();
        AltaPostulante a = new AltaPostulante(modelo);
        a.setVisible(true);
    }//GEN-LAST:event_btnRegistrarAltaPostulanteActionPerformed

    // Funcionamiento del boton Agregar
    private void btnAgregarAltaPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAltaPostulanteActionPerformed
        // Tomo la tematica seleccionada, el nivel y le agrego la experiencia al postulante cargando la lista posteriormente
        Tematica tema = (Tematica) ComboTemasAlta.getSelectedItem();
        String Nivel = SpinnerNivelAlta.getValue().toString();
        ArrayList<Postulante> Post = modelo.getListaPostulantes();
        this.postulante.agregarExperiencia(tema, Nivel);
        cargarLista();
    }//GEN-LAST:event_btnAgregarAltaPostulanteActionPerformed

    private void btnCancelarSiguienteAltaPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarSiguienteAltaPostulanteActionPerformed
        // cierro la ventana
        dispose();
    }//GEN-LAST:event_btnCancelarSiguienteAltaPostulanteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SiguienteVentanaAltaPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SiguienteVentanaAltaPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SiguienteVentanaAltaPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SiguienteVentanaAltaPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SiguienteVentanaAltaPostulante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Tematica> ComboTemasAlta;
    private javax.swing.JList<String> ListExperienciaAlta;
    private javax.swing.JSeparator Separator1AltaUsuario;
    private javax.swing.JSpinner SpinnerNivelAlta;
    private javax.swing.JButton btnAgregarAltaPostulante;
    private javax.swing.JButton btnCancelarSiguienteAltaPostulante;
    private javax.swing.JButton btnEliminarAltaPostulante;
    private javax.swing.JButton btnRegistrarAltaPostulante;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblExperienciaAltaPostulante;
    private javax.swing.JLabel lblNivelAltaPostulante;
    private javax.swing.JLabel lblTemaAltaPostulante;
    // End of variables declaration//GEN-END:variables
}
