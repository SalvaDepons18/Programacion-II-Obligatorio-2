//Salvador Depons(303738) y Valentina Velazquez(305278)
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;
import Dominio.*;
import java.util.*;
import javax.swing.*;

// Clase de la ventana Consulta Para Puesto
public class ConsultaParaPuesto extends javax.swing.JFrame implements Observer {
    private Sistema modelo;
    
    // Constructor vacio
    public ConsultaParaPuesto() {
        initComponents();
    }
    
    // Constructor 
    public ConsultaParaPuesto(Sistema elSistema){
        modelo = elSistema;
        initComponents();
        cargarListaPuestos();
        modelo.addObserver(this);
    }
    
    // Carga el Jlist con la lista de puestos 
    public void cargarListaPuestos(){
        ArrayList<Puesto> Puestos = modelo.getListaPuestos();
        Puesto[] PuestosArray = new Puesto[Puestos.size()];

        for (int i = 0; i < Puestos.size(); i++) {
             PuestosArray[i] = Puestos.get(i);
        }

        listPuestosConsultaParaPuesto.setListData(PuestosArray); 
    }

    // Carga la lista de los postulantes que cumplen los requisitos
    public void cargarListaPostulantesCumplidores(ArrayList<Postulante> lista){
        Postulante[] PostulantesArray = new Postulante[lista.size()];
        
        for (int i = 0; i < lista.size(); i++) {
            PostulantesArray[i] = lista.get(i);
        }
         
        listPostulantesConsultaPuesto.setListData(PostulantesArray); 
    }
    
    // Metodo update para actualizar listas y mantener actualizada la consulta
    @Override 
    public void update(Observable o, Object arg){
        Puesto puesto = listPuestosConsultaParaPuesto.getSelectedValue();
        cargarListaPuestos();
        listPuestosConsultaParaPuesto.setSelectedValue(puesto, true);
        String Nivel = spinnerConsultaParaPuesto.getValue().toString();
        
        ArrayList<Postulante> PostuQueCumplen = modelo.verPostulantesCumplidores(puesto, Nivel);
        PostuQueCumplen = modelo.ordernarPorNivel(PostuQueCumplen);
        cargarListaPostulantesCumplidores(PostuQueCumplen);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblConsultaParaPuesto = new javax.swing.JLabel();
        lblPuestosConsultaParaPuesto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPuestosConsultaParaPuesto = new javax.swing.JList<>();
        lblNivelConsultaParaPuesto = new javax.swing.JLabel();
        spinnerConsultaParaPuesto = new javax.swing.JSpinner();
        btnConsultarConsultaParaPuesto = new javax.swing.JButton();
        separatorConsultaParaPuesto = new javax.swing.JSeparator();
        lblPostulantesConsultaParaPuesto = new javax.swing.JLabel();
        btnCancelarConsultaParaPuesto = new javax.swing.JToggleButton();
        btnExportarConsultaParaPuesto = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPostulantesConsultaPuesto = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Para Puesto");
        getContentPane().setLayout(null);

        lblConsultaParaPuesto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblConsultaParaPuesto.setText("Consulta Para Puesto");

        lblPuestosConsultaParaPuesto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPuestosConsultaParaPuesto.setText("Puestos: ");

        jScrollPane1.setViewportView(listPuestosConsultaParaPuesto);

        lblNivelConsultaParaPuesto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNivelConsultaParaPuesto.setText("Nivel: ");

        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel(1, 1, 10, 1);
        spinnerConsultaParaPuesto.setModel(modeloSpinner);

        btnConsultarConsultaParaPuesto.setText("Consultar");
        btnConsultarConsultaParaPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarConsultaParaPuestoActionPerformed(evt);
            }
        });

        lblPostulantesConsultaParaPuesto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPostulantesConsultaParaPuesto.setText("Postulantes:");

        btnCancelarConsultaParaPuesto.setText("Cancelar");
        btnCancelarConsultaParaPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarConsultaParaPuestoActionPerformed(evt);
            }
        });

        btnExportarConsultaParaPuesto.setText("Exportar");
        btnExportarConsultaParaPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarConsultaParaPuestoActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listPostulantesConsultaPuesto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblConsultaParaPuesto)
                .addGap(131, 131, 131))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separatorConsultaParaPuesto)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNivelConsultaParaPuesto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConsultarConsultaParaPuesto))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPostulantesConsultaParaPuesto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerConsultaParaPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPuestosConsultaParaPuesto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancelarConsultaParaPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportarConsultaParaPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblConsultaParaPuesto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPuestosConsultaParaPuesto)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNivelConsultaParaPuesto)
                                .addComponent(spinnerConsultaParaPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnConsultarConsultaParaPuesto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(separatorConsultaParaPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPostulantesConsultaParaPuesto)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 80, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnExportarConsultaParaPuesto)
                            .addComponent(btnCancelarConsultaParaPuesto))
                        .addGap(18, 18, 18))))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 460, 460);

        setBounds(0, 0, 488, 491);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarConsultaParaPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarConsultaParaPuestoActionPerformed
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarConsultaParaPuestoActionPerformed
    
    // Boton encargado de mostrar los postulantes cumplidores
    private void btnConsultarConsultaParaPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarConsultaParaPuestoActionPerformed
        // Valido que la lista este seleccionada
        if(listPuestosConsultaParaPuesto.getSelectedValue() == (null)){
            JOptionPane.showMessageDialog(this, "Seleccione un puesto");
        }else {
            // Tomo el puesto seleccionado y llamo al metodo cargar lista con los postulantes que cumplen
            Puesto puesto = listPuestosConsultaParaPuesto.getSelectedValue();
            String Nivel = spinnerConsultaParaPuesto.getValue().toString();

            ArrayList<Postulante> PostuQueCumplen = modelo.verPostulantesCumplidores(puesto, Nivel);

            PostuQueCumplen = modelo.ordernarPorNivel(PostuQueCumplen);
            cargarListaPostulantesCumplidores(PostuQueCumplen);
        }
        
    }//GEN-LAST:event_btnConsultarConsultaParaPuestoActionPerformed

    private void btnExportarConsultaParaPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarConsultaParaPuestoActionPerformed
        // Valido que existan postulantes para exportar
        if( listPostulantesConsultaPuesto.getModel().getSize() == 0 ){
            JOptionPane.showMessageDialog(this, "La lista de postulantes esta vacia");
        }else {
            // Tomo los datos y llamo al metodo que guarda los postulantes en el archivo txt
            Puesto puesto = listPuestosConsultaParaPuesto.getSelectedValue(); 
            String Nivel = spinnerConsultaParaPuesto.getValue().toString();
            ArrayList<Postulante> PostuQueCumplen = modelo.verPostulantesCumplidores(puesto, Nivel);
            PostuQueCumplen = modelo.ordernarPorNivel(PostuQueCumplen);
            modelo.guardarPostulantesEnArchivo(puesto, PostuQueCumplen);
            JOptionPane.showMessageDialog(this, "La lista fue guardada correctamente");
        }
    }//GEN-LAST:event_btnExportarConsultaParaPuestoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaParaPuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaParaPuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaParaPuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaParaPuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaParaPuesto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelarConsultaParaPuesto;
    private javax.swing.JButton btnConsultarConsultaParaPuesto;
    private javax.swing.JToggleButton btnExportarConsultaParaPuesto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblConsultaParaPuesto;
    private javax.swing.JLabel lblNivelConsultaParaPuesto;
    private javax.swing.JLabel lblPostulantesConsultaParaPuesto;
    private javax.swing.JLabel lblPuestosConsultaParaPuesto;
    private javax.swing.JList<Postulante> listPostulantesConsultaPuesto;
    private javax.swing.JList<Puesto> listPuestosConsultaParaPuesto;
    private javax.swing.JSeparator separatorConsultaParaPuesto;
    private javax.swing.JSpinner spinnerConsultaParaPuesto;
    // End of variables declaration//GEN-END:variables
}
